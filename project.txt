1.Server setup & user creation
step1.
 
sudo adduser user1 
[sudo] password for kali: 
info: Adding user `user1' ...
info: Selecting UID/GID from range 1000 to 59999 ...
info: Adding new group `user1' (1001) ...
info: Adding new user `user1' (1001) with group `user1 (1001)' ...
info: Creating home directory `/home/user1' ...
info: Copying files from `/etc/skel' ...
New password: 
Retype new password: 
passwd: password updated successfully
Changing the user information for user1
Enter the new value, or press ENTER for the default
	Full Name []: 
	Room Number []: 
	Work Phone []: 
	Home Phone []: 
	Other []: 
Is the information correct? [Y/n] y
info: Adding new user `user1' to supplemental / extra groups `users' ...
info: Adding user `user1' to group `users' ...

Step2. 

┌──(kali㉿kali)-[~]
└─$ sudo usermod -aG sudo user1  

___________________________________________________________________________


2. Web server installation

step 1. install Apache server

$ sudo apt update

[sudo] password for kali: 
Hit:1 http://http.kali.org/kali kali-rolling InRelease
1278 packages can be upgraded. Run 'apt list --upgradable' to see them.
                                                                                                                                                                                                                                              
┌──(kali㉿kali)-[~]
└─$ sudo apt install apache2

apache2 is already the newest version (2.4.62-1).
Summary:
  Upgrading: 0, Installing: 0, Removing: 0, Not Upgrading: 1278
 



 step 2. I opened the browser and entered the IP and the server Apache is working

                                                                                                                                         

ifconfig   
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.19.129  netmask 255.255.255.0  broadcast 192.168.19.255
        inet6 fe80::20c:29ff:fe0c:802b  prefixlen 64  scopeid 0x20<link>
        ether 00:0c:29:0c:80:2b  txqueuelen 1000  (Ethernet)
        RX packets 34  bytes 4791 (4.6 KiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 70  bytes 15579 (15.2 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

systemctl status apache2
● apache2.service - The Apache HTTP Server
     Loaded: loaded (/usr/lib/systemd/system/apache2.service; enabled; preset: >
     Active: active (running) since Sat 2024-09-28 09:14:16 EDT; 20min ago
 Invocation: a8dfb438e4ae4ddbb3889257a7c22721
       Docs: https://httpd.apache.org/docs/2.4/
    Process: 811 ExecStart=/usr/sbin/apachectl start (code=exited, status=0/SUC>
   Main PID: 978 (apache2)
      Tasks: 8 (limit: 2224)
     Memory: 11.6M (peak: 29.7M swap: 10.9M swap peak: 10.9M)
        CPU: 592ms
     CGroup: /system.slice/apache2.service
             ├─ 978 /usr/sbin/apache2 -k start
             ├─ 991 /usr/sbin/apache2 -k start
             ├─ 992 /usr/sbin/apache2 -k start
             ├─ 993 /usr/sbin/apache2 -k start
             ├─ 994 /usr/sbin/apache2 -k start
             ├─ 995 /usr/sbin/apache2 -k start
             ├─ 996 /usr/sbin/apache2 -k start
             └─7004 /usr/sbin/apache2 -k start

Sep 28 09:14:15 kali systemd[1]: Starting apache2.service - The Apache HTTP Ser>
Sep 28 09:14:16 kali systemd[1]: Started apache2.service - The Apache HTTP Serv>
                                                                                
┌──(kali㉿kali)-[~]



___________________________________________________________________________


3. MySQL Database installation

step 1.


sudo systemctl status mysql  
● mariadb.service - MariaDB 11.4.2 database server
     Loaded: loaded (/usr/lib/systemd/system/mariadb.service; enabled; preset: >
     Active: active (running) since Fri 2024-09-27 13:34:23 EDT; 44min ago
 Invocation: aaa7f91a66134354ae64dbbb9f86be43
       Docs: man:mariadbd(8)
             https://mariadb.com/kb/en/library/systemd/
   Main PID: 985 (mariadbd)
     Status: "Taking your SQL requests now..."
      Tasks: 9 (limit: 14682)
     Memory: 2.2M (peak: 248.2M swap: 208.6M swap peak: 208.6M)
        CPU: 13.504s
     CGroup: /system.slice/mariadb.service
             └─985 /usr/sbin/mariadbd

Sep 27 13:34:16 kali mariadbd[985]: 2024-09-27 13:34:16 0 [Note] InnoDB: Loadin>
Sep 27 13:34:16 kali mariadbd[985]: 2024-09-27 13:34:16 0 [Note] InnoDB: Buffer>
Sep 27 13:34:23 kali mariadbd[985]: 2024-09-27 13:34:23 0 [Note] Server socket >
Sep 27 13:34:23 kali mariadbd[985]: 2024-09-27 13:34:23 0 [Note] mariadbd: Even>
Sep 27 13:34:23 kali mariadbd[985]: 2024-09-27 13:34:23 0 [Note] /usr/sbin/mari>
Sep 27 13:34:23 kali mariadbd[985]: Version: '11.4.2-MariaDB-4'  socket: '/run/>
Sep 27 13:34:23 kali systemd[1]: Started mariadb.service - MariaDB 11.4.2 datab>
Sep 27 13:34:23 kali /etc/mysql/debian-start[1098]: Upgrading MariaDB tables if>
Sep 27 13:34:23 kali /etc/mysql/debian-start[1111]: Checking for insecure root >
Sep 27 13:34:23 kali /etc/mysql/debian-start[1115]: Triggering myisam-recover f>
                                                                               
sudo mysql -u root -p

Enter password: 
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 40
Server version: 11.4.2-MariaDB-4 Debian n/a

Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.

Support MariaDB developers by giving a star at https://github.com/MariaDB/server
Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]> create database Test;
Query OK, 1 row affected (0.001 sec)

MariaDB [(none)]> show databases;
+--------------------+
| Database           |
+--------------------+
| Test               |
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
5 rows in set (0.001 sec)

MariaDB [(none)]> 

step 2.

[(none)]> CREATE USER dbuser@localhost IDENTIFIED BY '123';
Query OK, 0 rows affected (0.007 sec)

MariaDB [(none)]> SELECT User FROM mysql.user WHERE User='dbuser' AND Host='localhost';
+--------+
| User   |
+--------+
| dbuser |
+--------+
1 row in set (0.003 sec)

MariaDB [(none)]> EXIT
Bye
                                                                                           
┌──(kali㉿kali)-[~]
└─$ sudo mysql -u dbuser -p

Enter password: 
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 41
Server version: 11.4.2-MariaDB-4 Debian n/a

Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.

Support MariaDB developers by giving a star at https://github.com/MariaDB/server
Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]> 


___________________________________________________________________________

3. FTP Access configuration


step 1. 

sudo apt update 

Hit:1 http://http.kali.org/kali kali-rolling InRelease
1278 packages can be upgraded. Run 'apt list --upgradable' to see them.
                                                                                
┌──(kali㉿kali)-[~]
└─$ sudo apt install vsftpd

Installing:                     
  vsftpd

Summary:
  Upgrading: 0, Installing: 1, Removing: 0, Not Upgrading: 1278
  Download size: 142 kB
  Space needed: 352 kB / 81.0 GB available

Get:1 http://kali.download/kali kali-rolling/main amd64 vsftpd amd64 3.0.3-13.1 [142 kB]
Fetched 142 kB in 1s (173 kB/s)  
Preconfiguring packages ...
Selecting previously unselected package vsftpd.
(Reading database ... 503316 files and directories currently installed.)
Preparing to unpack .../vsftpd_3.0.3-13.1_amd64.deb ...
Unpacking vsftpd (3.0.3-13.1) ...
Setting up vsftpd (3.0.3-13.1) ...
/usr/lib/tmpfiles.d/vsftpd.conf:1: Line references path below legacy directory /
var/run/, updating /var/run/vsftpd/empty → /run/vsftpd/empty; please update the 
tmpfiles.d/ drop-in file accordingly.
update-rc.d: We have no instructions for the vsftpd init script.
update-rc.d: It looks like a network service, we disable it.
Processing triggers for man-db (2.12.1-2) ...
Processing triggers for kali-menu (2024.3.1) ...
                                                                                
┌──(kali㉿kali)-[~]
└─$ sudo systemctl start vsftpd

                                                                                
┌──(kali㉿kali)-[~]
└─$ sudo service vsftpd status

● vsftpd.service - vsftpd FTP server
     Loaded: loaded (/usr/lib/systemd/system/vsftpd.service; disabled; preset: >
     Active: active (running) since Sat 2024-09-28 09:51:31 EDT; 1min 0s ago
 Invocation: 25ce2bd08bd04e8da06a4afe3f6216b2
    Process: 7908 ExecStartPre=/bin/mkdir -p /var/run/vsftpd/empty (code=exited>
   Main PID: 7910 (vsftpd)
      Tasks: 1 (limit: 2224)
     Memory: 828K (peak: 1.5M)
        CPU: 26ms
     CGroup: /system.slice/vsftpd.service
             └─7910 /usr/sbin/vsftpd /etc/vsftpd.conf

Sep 28 09:51:31 kali systemd[1]: Starting vsftpd.service - vsftpd FTP server...
Sep 28 09:51:31 kali systemd[1]: Started vsftpd.service - vsftpd FTP server.
               
___________________________________________________________________________

5.What are the different types of DNS records (e.g., A, AAAA,

CNAME, MX, TXT) and what are their purposes



DNS (Domain Name System) records are used to map domain names to IP addresses and other information. Here are some of the most common types:

A Record
Purpose: Maps a domain name to an IPv4 address.
Example: www.example.com maps to 192.0.2.1.

AAAA Record
Purpose: Maps a domain name to an IPv6 address.
Example: www.example.com maps to 2001:db8:85a3:0000:0000:8a2e:0370:7334.

CNAME Record
Purpose: Creates an alias for another domain name.
Example: www.example.com is an alias for example.com.

MX Record
Purpose: Specifies the Mail Exchanger (MX) servers responsible for handling email for a domain.
Example: mail.example.com is an MX server for example.com.

TXT Record
Purpose: Stores arbitrary text information associated with a domain. It can be used for various purposes, such as:
SPF records: Defining which hosts are allowed to send emails on behalf of a domain.
DKIM records: Signing emails to verify their authenticity.
DMARC records: Specifying policies for handling email authentication failures.
Google Site Verification: Verifying domain ownership for Google services.
                                                                               

               


